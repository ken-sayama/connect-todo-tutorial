// @generated by protoc-gen-connect-query v0.4.1 with parameter "target=ts"
// @generated from file todo/v1/todo.proto (package proto.todo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import { CreateTodoRequest, CreateTodoResponse, DeleteTodoRequest, DeleteTodoResponse, GetTodoRequest, GetTodoResponse, ListTodosRequest, ListTodosResponse, UpdateTodoRequest, UpdateTodoResponse } from "./todo_pb.js";

export const typeName = "proto.todo.v1.TodoService";

/**
 * @generated from rpc proto.todo.v1.TodoService.ListTodos
 */
export const listTodos = createQueryService({
  service: {
    methods: {
      listTodos: {
        name: "ListTodos",
        kind: MethodKind.Unary,
        I: ListTodosRequest,
        O: ListTodosResponse,
      },
    },
    typeName: "proto.todo.v1.TodoService",
  },
}).listTodos;

/**
 * @generated from rpc proto.todo.v1.TodoService.GetTodo
 */
export const getTodo = createQueryService({
  service: {
    methods: {
      getTodo: {
        name: "GetTodo",
        kind: MethodKind.Unary,
        I: GetTodoRequest,
        O: GetTodoResponse,
      },
    },
    typeName: "proto.todo.v1.TodoService",
  },
}).getTodo;

/**
 * @generated from rpc proto.todo.v1.TodoService.CreateTodo
 */
export const createTodo = createQueryService({
  service: {
    methods: {
      createTodo: {
        name: "CreateTodo",
        kind: MethodKind.Unary,
        I: CreateTodoRequest,
        O: CreateTodoResponse,
      },
    },
    typeName: "proto.todo.v1.TodoService",
  },
}).createTodo;

/**
 * @generated from rpc proto.todo.v1.TodoService.UpdateTodo
 */
export const updateTodo = createQueryService({
  service: {
    methods: {
      updateTodo: {
        name: "UpdateTodo",
        kind: MethodKind.Unary,
        I: UpdateTodoRequest,
        O: UpdateTodoResponse,
      },
    },
    typeName: "proto.todo.v1.TodoService",
  },
}).updateTodo;

/**
 * @generated from rpc proto.todo.v1.TodoService.DeleteTodo
 */
export const deleteTodo = createQueryService({
  service: {
    methods: {
      deleteTodo: {
        name: "DeleteTodo",
        kind: MethodKind.Unary,
        I: DeleteTodoRequest,
        O: DeleteTodoResponse,
      },
    },
    typeName: "proto.todo.v1.TodoService",
  },
}).deleteTodo;
